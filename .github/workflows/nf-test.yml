name: Run nf-test
on:
  push:
    branches:
      # https://docs.renovatebot.com/key-concepts/automerge/#branch-vs-pr-automerging
      - "renovate/**" # branches Renovate creates
  pull_request:
    branches: [master]
  merge_group:
    types: [checks_requested]
    branches: [master]
  workflow_dispatch:
    inputs:
      runners:
        description: "Runners to test on"
        type: choice
        options:
          - "ubuntu-latest"
          - "self-hosted"
        default: "self-hosted"

# Cancel if a newer run is started
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  # renovate: datasource=github-releases depName=askimed/nf-test versioning=semver
  NFT_VER: "0.9.2"
  NXF_ANSI_LOG: false
  NXF_SINGULARITY_CACHEDIR: ${{ github.workspace }}/.singularity
  NXF_SINGULARITY_LIBRARYDIR: ${{ github.workspace }}/.singularity
  # renovate: datasource=github-releases depName=nextflow/nextflow versioning=semver
  NXF_VER: "24.10.1"

jobs:
  nf-test-changes:
    name: nf-test-changes
    runs-on: ubuntu-latest
    outputs:
      # Expose detected tags as 'modules' and 'workflows' output variables
      paths: ${{ steps.outputs.outputs.components }}
      modules: ${{ steps.outputs.outputs.modules }}
      subworkflows: ${{ steps.outputs.outputs.subworkflows}}
      changes: ${{ steps.outputs.outputs.changes }}
      # Prod for version bumping
    steps:
      - name: Clean Workspace # Purge the workspace in case it's running on a self-hosted runner
        run: |
          ls -la ./
          rm -rf ./* || true
          rm -rf ./.??* || true
          ls -la ./
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0

      - name: List nf-test files
        id: list
        uses: adamrtalbot/detect-nf-test-changes@6bf6fd9fe0fb63a0362fb0e09de5acb6d055a754 # v0.0.5
        with:
          head: ${{ github.sha }}
          base: ${{ github.event.pull_request.base.sha || github.event.merge_group.base_sha }}
          n_parents: 2
          ignored: ".git/* .gitpod.yml .prettierignore .prettierrc.yml *.md *.png modules.json pyproject.toml tower.yml modules/nf-core/parabricks"

      - name: Separate modules and subworkflows
        id: outputs
        run: |
          echo components=$(echo '${{ steps.list.outputs.components }}' | jq -c '.') >> $GITHUB_OUTPUT
          echo modules=$(echo '${{ steps.list.outputs.components }}' | jq -c '. | map(select(contains("modules"))) | map(gsub("modules/nf-core/"; ""))') >> $GITHUB_OUTPUT
          echo subworkflows=$(echo '${{ steps.list.outputs.components }}' | jq '. | map(select(contains("subworkflows"))) | map(gsub("subworkflows/nf-core/"; ""))') >> $GITHUB_OUTPUT
          echo changes=$(echo '${{ steps.list.outputs.components }}' | jq '. | length') >> $GITHUB_OUTPUT

      - name: debug
        run: |
          echo ${{ steps.outputs.outputs.components }}
          echo ${{ steps.outputs.outputs.modules }}
          echo ${{ steps.outputs.outputs.subworkflows }}
  nf-test:
    runs-on: ${{ github.event.inputs.runners || 'self-hosted' }}
    # NOTE I think this is the cleanest way to get them organized
    # process | conda | 1
    # process | conda | 2
    # process | conda | 3
    # process | docker_self_hosted | 1
    # ...
    # workflow | singularity | 3
    needs: nf-test-changes
    name: "${{ matrix.profile }} | ${{ matrix.shard }}"
    # TODO
    # needs: get-number-of-shards
    # if: ${{ fromJSON(needs.get-number-of-shards.outputs.shards) != fromJSON('["1", "0"]') }}
    if: ${{ fromJSON(needs.nf-test-changes.outputs.changes) > 0 }}
    strategy:
      fail-fast: false
      matrix:
        # NOTE We could split these, but there's probably going to be more process tests than workflow tests, so we're just going to combine them all and bump up the shards for now
        # NOTE The name of the test would be name: "${{ matrix.filter }} | ${{ matrix.profile }} | ${{ matrix.shard }}"
        # filter: [process, workflow]
        profile: [conda, docker_self_hosted, singularity]
        shard: [1, 2, 3, 4, 5]
        path: ${{ fromJSON(needs.nf-test-changes.outputs.paths) }}
        exclude:
          - profile: conda
            path: modules/nf-core/angsd/gl
          - profile: conda
            path: modules/nf-core/annotsv/installannotations
          - profile: conda
            path: modules/nf-core/happy/sompy
          - profile: conda
            path: modules/nf-core/backsub
          - profile: conda
            path: modules/nf-core/bakta/bakta
          - profile: conda
            path: modules/nf-core/bakta/baktadbdownload
          - profile: conda
            path: modules/nf-core/bases2fastq
          - profile: conda
            path: modules/nf-core/bcl2fastq
          - profile: conda
            path: modules/nf-core/bclconvert
          - profile: conda
            path: modules/nf-core/celesta
          - profile: conda
            path: modules/nf-core/cellpose
          - profile: conda
            path: modules/nf-core/cellranger/count
          - profile: conda
            path: modules/nf-core/cellranger/mkfastq
          - profile: conda
            path: modules/nf-core/cellranger/mkgtf
          - profile: conda
            path: modules/nf-core/cellranger/mkref
          - profile: conda
            path: modules/nf-core/cellranger/mkvdjref
          - profile: conda
            path: modules/nf-core/cellranger/multi
          - profile: conda
            path: modules/nf-core/cellranger/vdj
          - profile: conda
            path: modules/nf-core/checkqc
          - profile: conda
            path: modules/nf-core/custom/dumpsoftwareversions
          - profile: conda
            path: modules/nf-core/deepcell/mesmer
          - profile: conda
            path: modules/nf-core/deepsomatic
          - profile: singularity
            path: modules/nf-core/deepsomatic
          - profile: conda
            path: modules/nf-core/deepvariant
          - profile: conda
            path: modules/nf-core/deepvariant/callvariants
          - profile: conda
            path: modules/nf-core/deepvariant/makeexamples
          - profile: conda
            path: modules/nf-core/deepvariant/postprocessvariants
          - profile: conda
            path: modules/nf-core/deepvariant/rundeepvariant
          - profile: conda
            path: modules/nf-core/deepvariant/vcfstatsreport
          - profile: conda
            path: modules/nf-core/doubletdetection
          - profile: conda
            path: modules/nf-core/ensemblvep/vep
          - profile: conda
            path: modules/nf-core/fastk/fastk
          - profile: conda
            path: modules/nf-core/cellrangerarc/mkgtf
          - profile: conda
            path: modules/nf-core/fastk/histex
          - profile: conda
            path: modules/nf-core/fastk/merge
          - profile: conda
            path: modules/nf-core/fcs/fcsadaptor
          - profile: conda
            path: modules/nf-core/fcs/fcsgx
          - profile: conda
            path: modules/nf-core/ganon/buildcustom
          - profile: conda
            path: modules/nf-core/ganon/classify
          - profile: conda
            path: modules/nf-core/ganon/report
          - profile: conda
            path: modules/nf-core/ganon/table
          - profile: conda
            path: modules/nf-core/gatk4/cnnscorevariants
          - profile: conda
            path: modules/nf-core/gatk4/determinegermlinecontigploidy
          - profile: conda
            path: modules/nf-core/genescopefk
          - profile: conda
            path: modules/nf-core/ilastik/multicut
          - profile: conda
            path: modules/nf-core/ilastik/pixelclassification
          - profile: conda
            path: modules/nf-core/imputeme/vcftoprs
          - profile: conda
            path: modules/nf-core/mcstaging/imc2mc
          - profile: conda
            path: modules/nf-core/mcquant
          - profile: conda
            path: modules/nf-core/mcstaging/phenoimager2mc
          - profile: conda
            path: modules/nf-core/merquryfk/katcomp
          - profile: conda
            path: modules/nf-core/merquryfk/katgc
          - profile: conda
            path: modules/nf-core/merquryfk/merquryfk
          - profile: conda
            path: modules/nf-core/merquryfk/ploidyplot
          - profile: conda
            path: modules/nf-core/molkartgarage/clahe
          - profile: conda
            path: modules/nf-core/quartonotebook
          - profile: conda
            path: modules/nf-core/scimap/spatiallda
          - profile: conda
            path: modules/nf-core/sentieon/bwaindex
          - profile: conda
            path: modules/nf-core/sentieon/bwamem
          - profile: conda
            path: modules/nf-core/sentieon/datametrics
          - profile: conda
            path: modules/nf-core/sentieon/dedup
          - profile: conda
            path: modules/nf-core/sentieon/qualcal
          - profile: conda
            path: modules/nf-core/spaceranger/mkgtf
          - profile: conda
            path: modules/nf-core/spaceranger/mkref
          - profile: conda
            path: modules/nf-core/spaceranger/count
          - profile: conda
            path: modules/nf-core/spotiflow
          - profile: conda
            path: modules/nf-core/svanalyzer/svbenchmark
          - profile: conda
            path: modules/nf-core/universc
          - profile: singularity
            path: modules/nf-core/universc
          - profile: conda
            path: modules/nf-core/vt/decompose
          - profile: singularity
            path: modules/nf-core/bases2fastq
          - profile: conda
            path: modules/nf-core/wittyer
          - profile: conda
            path: modules/nf-core/islandpath
          - profile: conda
            path: modules/nf-core/scimap/mcmicro
          - path: modules/nf-core/parabricks/fq2bammeth
          - path: modules/nf-core/parabricks/fq2bam
          - path: modules/nf-core/parabricks/applybqsr
          - profile: conda
            path: subworkflows/nf-core/vcf_annotate_ensemblvep
          - profile: conda
            path: subworkflows/nf-core/bcl_demultiplex
          - profile: conda
            path: subworkflows/nf-core/deepvariant
          - profile: conda
            path: subworkflows/nf-core/fastq_align_bamcmp_bwa
          - profile: conda
            path: subworkflows/nf-core/fastq_align_bwa
          - profile: conda
            path: subworkflows/nf-core/fasta_newick_epang_gappa
          - profile: conda
            path: modules/nf-core/xeniumranger/relabel
          - profile: conda
            path: modules/nf-core/xeniumranger/rename
          - profile: conda
            path: modules/nf-core/xeniumranger/resegment
          - profile: conda
            path: modules/nf-core/xeniumranger/import-segmentation

    env:
      # FIXME Bumping them up to make the transition smooth, then we can throttle them back
      TOTAL_SHARDS: 5
      SENTIEON_LICENSE_MESSAGE: ${{ secrets.SENTIEON_LICENSE_MESSAGE }}
      SENTIEON_ENCRYPTION_KEY: ${{ secrets.SENTIEON_ENCRYPTION_KEY }}
    steps:
      - name: Clean Workspace # Purge the workspace in case it's running on a self-hosted runner
        run: |
          ls -la ./
          rm -rf ./* || true
          rm -rf ./.??* || true
          ls -la ./
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0
      - name: Run nf-test Action
        uses: ./.github/actions/nf-test-action
        with:
          profile: ${{ matrix.profile }}
          shard: ${{ matrix.shard }}
          total_shards: ${{ env.TOTAL_SHARDS }} # NOTE This is a hack to get the number of shards for the matrix
          paths: ${{ matrix.path }}
